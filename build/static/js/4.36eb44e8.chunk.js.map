{"version":3,"sources":["components/quotes/NoQuotesFound.js","components/quotes/NoQuotesFound.module.css","components/quotes/HighlightedQuote.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/comments/NewCommentForm.module.css","components/quotes/HighlightedQuote.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/NewCommentForm.js","components/comments/Comments.js","pages/QuoteDetail.js"],"names":["NoQuotesFound","className","classes","noquotes","to","module","exports","HighlightedQuote","props","quote","text","author","CommentItem","item","CommentsList","comments","map","comment","id","NewCommentForm","commentTextRef","useRef","quoteId","useParams","useHttp","addComment","sendRequest","error","submitFormHandler","event","a","preventDefault","commentData","current","value","form","onSubmit","control","htmlFor","rows","ref","actions","Comments","useState","isAddingComment","setIsAddingComment","getAllComments","status","data","useEffect","addCommentHandler","useCallback","onClick","onAddComment","LoadingSpinner","length","QuoteDetail","path","useRouteMatch","getSingleQuote","exact","component"],"mappings":"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","file":"static/js/4.36eb44e8.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => (\n  <div className={classes.noquotes}>\n    <p>No quotes found!</p>\n    <Link to=\"/new-quote\" className=\"btn\">\n      Add a Quote\n    </Link>\n  </div>\n);\n\nexport default NoQuotesFound;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__36GQP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__necGD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__6TIHc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__5llCr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__2L-E-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__ZrQLz\",\"loading\":\"NewCommentForm_loading__NX1wQ\",\"control\":\"NewCommentForm_control__2KnW1\",\"actions\":\"NewCommentForm_actions__3L-kn\"};","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useRef } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport { useParams } from 'react-router';\n\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = props => {\n  const commentTextRef = useRef();\n  const { quoteId } = useParams();\n\n  const { sendRequest, error } = useHttp(addComment);\n\n  const submitFormHandler = async event => {\n    event.preventDefault();\n    const commentData = commentTextRef.current.value;\n    await sendRequest({ quoteId, commentData });\n  };\n\n  if (error) return <div className=\"centered focused\">{error}</div>;\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\n\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\n\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './Comments.module.css';\n\nimport CommentsList from '../../components/comments/CommentsList';\nimport NewCommentForm from './NewCommentForm';\n\nconst Comments = () => {\n  const { quoteId } = useParams();\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const { sendRequest, status, data: comments } = useHttp(getAllComments);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const addCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const renderedComments = () => {\n    if (status === 'pending') {\n      return (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      );\n    }\n\n    if (status === 'completed' && comments) {\n      return <CommentsList comments={comments} />;\n    }\n\n    if (status === 'completed' && comments.length === 0) {\n      return <p>No comments added yet</p>;\n    }\n  };\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm quoteId={quoteId} onAddComment={addCommentHandler} />\n      )}\n      {renderedComments()}\n    </section>\n  );\n};\n\nexport default Comments;\n","import { Fragment, useEffect } from 'react';\r\nimport { Route, useParams, useRouteMatch } from 'react-router';\r\n\r\nimport HighLightedQuote from '../components/quotes/HighlightedQuote';\r\nimport Comments from '../components/comments/Comments';\r\nimport { Link } from 'react-router-dom';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getSingleQuote } from '../lib/api';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\r\n\r\nconst QuoteDetail = () => {\r\n  const { quoteId } = useParams();\r\n  const { path } = useRouteMatch();\r\n\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    error,\r\n    data: quote,\r\n  } = useHttp(getSingleQuote, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest(quoteId);\r\n  }, [quoteId, sendRequest]);\r\n\r\n  if (status === 'pending') {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) return <p className=\"centered focused\">{error}</p>;\r\n\r\n  if (!quote.text) return <NoQuotesFound />;\r\n\r\n  return (\r\n    <Fragment>\r\n      <HighLightedQuote text={quote.text} author={quote.author} />\r\n      <Route exact path={path}>\r\n        <div className=\"centered\">\r\n          <Link className=\"btn--flat\" to={`/quotes/${quoteId}/comments`}>\r\n            Load Comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n      <Route path={`${path}/comments`} component={Comments}></Route>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n"],"sourceRoot":""}