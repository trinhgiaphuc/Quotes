{"version":3,"sources":["components/quotes/NoQuotesFound.js","components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","pages/AllQuotes.js"],"names":["NoQuotesFound","className","classes","noquotes","to","module","exports","QuoteItem","props","item","text","author","id","QuoteList","quotes","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","ascending","sort","quoteA","quoteB","sortQuotes","sorting","onClick","push","pathname","list","map","quote","AllQuotes","useHttp","getAllQuotes","sendRequest","status","data","error","useEffect","LoadingSpinner","length"],"mappings":"mIAAA,mCAYeA,IATO,kBACpB,sBAAKC,UAAWC,IAAQC,SAAxB,UACE,iDACA,cAAC,IAAD,CAAMC,GAAG,aAAaH,UAAU,MAAhC,8B,mBCLJI,EAAOC,QAAU,CAAC,SAAW,kC,mBCA7BD,EAAOC,QAAU,CAAC,KAAO,0B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,wFCkB5CC,EAhBG,SAAAC,GAChB,OACE,qBAAIP,UAAWC,IAAQO,KAAvB,UACE,mCACE,qCACE,4BAAID,EAAME,SAEZ,qCAAaF,EAAMG,YAErB,cAAC,IAAD,CAAMP,GAAE,kBAAaI,EAAMI,IAAMX,UAAU,MAA3C,iC,iBC8CSY,EA1CG,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACbC,EAAUC,cACVC,EAAWC,cAGXC,EAAiD,QAFnC,IAAIC,gBAAgBH,EAASI,QAEVC,IAAI,QAErCC,EAjBW,SAACT,EAAQU,GAC1B,OAAOV,EAAOW,MAAK,SAACC,EAAQC,GAC1B,OAAIH,EACKE,EAAOd,GAAKe,EAAOf,GAAK,GAAK,EAE7Bc,EAAOd,GAAKe,EAAOf,GAAK,GAAK,KAYnBgB,CAAWd,EAAQK,GAuBxC,OACE,eAAC,WAAD,WACE,qBAAKlB,UAAWC,IAAQ2B,QAAxB,SACE,yBAAQC,QAxBe,WAC3Bf,EAAQgB,KAAK,CACXC,SAAUf,EAASe,SACnBX,OAAO,SAAD,OAAWF,EAAqB,OAAS,UAqB7C,kBACQA,EAAqB,aAAe,iBAG9C,oBAAIlB,UAAWC,IAAQ+B,KAAvB,SAhBFV,EAAaW,KAAI,SAAAC,GAAK,OACpB,cAAC,EAAD,CAEEvB,GAAIuB,EAAMvB,GACVD,OAAQwB,EAAMxB,OACdD,KAAMyB,EAAMzB,MAHPyB,EAAMvB,a,gCCHJwB,UA3BG,WAChB,MAKIC,YAAQC,KAAc,GAJxBC,EADF,EACEA,YACAC,EAFF,EAEEA,OACM1B,EAHR,EAGE2B,KACAC,EAJF,EAIEA,MAOF,OAJAC,qBAAU,WACRJ,MACC,CAACA,IAEW,YAAXC,EAEA,qBAAKvC,UAAU,WAAf,SACE,cAAC2C,EAAA,EAAD,MAKFF,EAAc,mBAAGzC,UAAU,mBAAb,SAAiCyC,IAEpC,cAAXF,GAA4C,IAAlB1B,EAAO+B,OAAqB,cAAC,IAAD,IAEnD,cAAC,EAAD,CAAW/B,OAAQA","file":"static/js/5.626ea870.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => (\n  <div className={classes.noquotes}>\n    <p>No quotes found!</p>\n    <Link to=\"/new-quote\" className=\"btn\">\n      Add a Quote\n    </Link>\n  </div>\n);\n\nexport default NoQuotesFound;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__36GQP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__xuGSY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__39pDE\",\"sorting\":\"QuoteList_sorting__3TnQ2\"};","import { Link } from 'react-router-dom';\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = props => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link to={`/quotes/${props.id}`} className=\"btn\">\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = ({ quotes }) => {\n  const history = useHistory();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get('sort') === 'asc';\n\n  const sortedQuotes = sortQuotes(quotes, isSortingAscending);\n\n  const changeSortingHandler = () => {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${isSortingAscending ? 'desc' : 'asc'}`,\n    });\n\n    // history.push(\n    //   `${location.pathname}?sort=` + (isSortingAscending ? 'desc' : 'asc')\n    // );\n  };\n\n  const renderedQuotes = () =>\n    sortedQuotes.map(quote => (\n      <QuoteItem\n        key={quote.id}\n        id={quote.id}\n        author={quote.author}\n        text={quote.text}\n      />\n    ));\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingAscending ? 'Descending' : 'Ascending'}\n        </button>\n      </div>\n      <ul className={classes.list}>{renderedQuotes()}</ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { useEffect } from 'react';\r\n\r\nimport QuoteList from '../components/quotes/QuoteList';\r\nimport NoQuotesFond from '../components/quotes/NoQuotesFound';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getAllQuotes } from '../lib/api';\r\n\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\n\r\nconst AllQuotes = () => {\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: quotes,\r\n    error,\r\n  } = useHttp(getAllQuotes, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n\r\n  if (status === 'pending') {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) return <p className=\"centered focused\">{error}</p>;\r\n\r\n  if (status === 'completed' && quotes.length === 0) return <NoQuotesFond />;\r\n\r\n  return <QuoteList quotes={quotes} />;\r\n};\r\n\r\nexport default AllQuotes;\r\n"],"sourceRoot":""}